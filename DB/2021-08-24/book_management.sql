-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- MEMBER Table Create SQL
CREATE TABLE MEMBER
(
    MEMBER_NO       NUMBER          NOT NULL, 
    MEMBER_ID       VARCHAR2(20)    NOT NULL, 
    MEMBER_PW       VARCHAR2(20)    NOT NULL, 
    MEMBER_NAME     VARCHAR2(20)    NOT NULL, 
    MEMBER_PHONE    CHAR(13)        NULL, 
    MEMBER_LEVEL    NUMBER          NULL, 
     PRIMARY KEY (MEMBER_NO)
)
/

CREATE SEQUENCE MEMBER_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MEMBER_AI_TRG
BEFORE INSERT ON MEMBER 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MEMBER_SEQ.NEXTVAL
    INTO :NEW.MEMBER_NO
    FROM DUAL;
END;
/

--DROP TRIGGER MEMBER_AI_TRG;
/

--DROP SEQUENCE MEMBER_SEQ;
/

COMMENT ON TABLE MEMBER IS '회원'
/

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '아이디'
/

COMMENT ON COLUMN MEMBER.MEMBER_PW IS '비밀번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름'
/

COMMENT ON COLUMN MEMBER.MEMBER_PHONE IS '전화번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_LEVEL IS '회원등급'
/


-- BOOK Table Create SQL

CREATE TABLE BOOK
(
    BOOK_NO          NUMBER           NOT NULL, 
    GENRE            VARCHAR2(30)     NOT NULL, 
    TITLE            VARCHAR2(100)    NOT NULL, 
    RENTAL_INTRO     VARCHAR2(300)    NOT NULL, 
    AUTHOR           VARCHAR2(50)     NOT NULL, 
    RENTAL_VOLUME    NUMBER           NOT NULL, 
     PRIMARY KEY (BOOK_NO)
)
/



CREATE SEQUENCE BOOK_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOOK_AI_TRG
BEFORE INSERT ON BOOK 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOOK_SEQ.NEXTVAL
    INTO :NEW.BOOK_NO
    FROM DUAL;
END;
/

--DROP TRIGGER BOOK_AI_TRG;
/

--DROP SEQUENCE BOOK_SEQ;
/

COMMENT ON TABLE BOOK IS '도서'
/

COMMENT ON COLUMN BOOK.BOOK_NO IS '책 번호'
/

COMMENT ON COLUMN BOOK.GENRE IS '장르'
/

COMMENT ON COLUMN BOOK.TITLE IS '도서제목'
/

COMMENT ON COLUMN BOOK.INTRO IS '소개'
/

COMMENT ON COLUMN BOOK.AUTHOR IS '작가'
/

COMMENT ON COLUMN BOOK.VOLUME IS '수량'
/

-- RENTAL Table Create SQL
CREATE TABLE RENTAL
(
    RENTAL_NO        NUMBER    NOT NULL, 
    MEMBER_NO      NUMBER    NOT NULL, 
    BOOK_NO          NUMBER    NOT NULL, 
    RENTAL_DATE      DATE      DEFAULT SYSDATE NOT NULL, 
    RETURN_DATE      DATE      DEFAULT SYSDATE + 7 NOT NULL, 
    RENTAL_STATUS    NUMBER    NOT NULL, 
     PRIMARY KEY (RENTAL_NO)
)
/

CREATE SEQUENCE RENTAL_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER RENTAL_AI_TRG
BEFORE INSERT ON RENTAL 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT RENTAL_SEQ.NEXTVAL
    INTO :NEW.RENTAL_NO
    FROM DUAL;
END;
/

--DROP TRIGGER RENTAL_AI_TRG;
/

--DROP SEQUENCE RENTAL_SEQ;
/

COMMENT ON TABLE RENTAL IS '대여'
/

COMMENT ON COLUMN RENTAL.RENTAL_NO IS '대여번호'
/

COMMENT ON COLUMN RENTAL.MEMBER_NO IS '회원번호'
/

COMMENT ON COLUMN RENTAL.BOOK_NO IS '책번호'
/

COMMENT ON COLUMN RENTAL.RENTAL_DATE IS '대여일'
/

COMMENT ON COLUMN RENTAL.RETURN_DATE IS '반납일'
/

COMMENT ON COLUMN RENTAL.RENTAL_STATUS IS '상태'
/

ALTER TABLE RENTAL
    ADD CONSTRAINT FK_RENTAL_BOOK_NO_BOOK_BOOK_NO FOREIGN KEY (BOOK_NO)
        REFERENCES BOOK (BOOK_NO)
/

ALTER TABLE RENTAL
    ADD CONSTRAINT FK_RENTAL_MEMBER_NAME_MEMBER_M FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO)
/



-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- MEMBER Table Create SQL
CREATE TABLE MEMBER
(
    MEMBER_NO       NUMBER          NOT NULL, 
    MEMBER_ID       VARCHAR2(20)    NOT NULL, 
    MEMBER_PW       VARCHAR2(20)    NOT NULL, 
    MEMBER_NAME     VARCHAR2(20)    NOT NULL, 
    MEMBER_PHONE    CHAR(13)        NOT NULL, 
    MEMBER_ADDR     VARCHAR2(50)    NOT NULL, 
    MEMBER_LEVEL    NUMBER          NOT NULL, 
     PRIMARY KEY (MEMBER_NO)
)
/

CREATE SEQUENCE MEMBER_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MEMBER_AI_TRG
BEFORE INSERT ON MEMBER 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MEMBER_SEQ.NEXTVAL
    INTO :NEW.MEMBER_NO
    FROM DUAL;
END;
/

--DROP TRIGGER MEMBER_AI_TRG;
/

--DROP SEQUENCE MEMBER_SEQ;
/

COMMENT ON TABLE MEMBER IS '회원'
/

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '아이디'
/

COMMENT ON COLUMN MEMBER.MEMBER_PW IS '비밀번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름'
/

COMMENT ON COLUMN MEMBER.MEMBER_PHONE IS '전화번호'
/

COMMENT ON COLUMN MEMBER.MEMBER_ADDR IS '주소'
/

COMMENT ON COLUMN MEMBER.MEMBER_LEVEL IS '회원구분'
/


-- ACCOMMODATION Table Create SQL
CREATE TABLE ACCOMMODATION
(
    ROOM_NO         NUMBER    NOT NULL, 
    ROOM_TYPE       NUMBER    NOT NULL, 
    ROOM_PRICE      NUMBER    NOT NULL, 
    ACCEP_PERSON    NUMBER    NOT NULL, 
     PRIMARY KEY (ROOM_NO)
)
/

CREATE SEQUENCE ACCOMMODATION_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ACCOMMODATION_AI_TRG
BEFORE INSERT ON ACCOMMODATION 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ACCOMMODATION_SEQ.NEXTVAL
    INTO :NEW.ROOM_NO
    FROM DUAL;
END;
/

--DROP TRIGGER ACCOMMODATION_AI_TRG;
/

--DROP SEQUENCE ACCOMMODATION_SEQ;
/

COMMENT ON TABLE ACCOMMODATION IS '숙소'
/

COMMENT ON COLUMN ACCOMMODATION.ROOM_NO IS '방 호수'
/

COMMENT ON COLUMN ACCOMMODATION.ROOM_TYPE IS '방 종류'
/

COMMENT ON COLUMN ACCOMMODATION.ROOM_PRICE IS '가격'
/

COMMENT ON COLUMN ACCOMMODATION.ACCEP_PERSON IS '허용 인원'
/


-- RESERVATION Table Create SQL
CREATE TABLE RESERVATION
(
    RES_NO        NUMBER    NOT NULL, 
    MEMBER_NO     NUMBER    NOT NULL, 
    ROOM_NO       NUMBER    NOT NULL, 
    RES_DATE      DATE      DEFAULT SYSDATE NOT NULL, 
    CHECK_IN      DATE      NOT NULL, 
    CHECK_OUT     DATE      NOT NULL, 
    RES_PERSON    NUMBER    NOT NULL, 
     PRIMARY KEY (RES_NO)
)
/

CREATE SEQUENCE RESERVATION_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER RESERVATION_AI_TRG
BEFORE INSERT ON RESERVATION 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT RESERVATION_SEQ.NEXTVAL
    INTO :NEW.RES_NO
    FROM DUAL;
END;
/

--DROP TRIGGER RESERVATION_AI_TRG;
/

--DROP SEQUENCE RESERVATION_SEQ;
/

COMMENT ON TABLE RESERVATION IS '예약'
/

COMMENT ON COLUMN RESERVATION.RES_NO IS '예약번호'
/

COMMENT ON COLUMN RESERVATION.MEMBER_NO IS '회원번호'
/

COMMENT ON COLUMN RESERVATION.ROOM_NO IS '방 호수'
/

COMMENT ON COLUMN RESERVATION.RES_DATE IS '예약일자'
/

COMMENT ON COLUMN RESERVATION.CHECK_IN IS '체크인'
/

COMMENT ON COLUMN RESERVATION.CHECK_OUT IS '체크아웃'
/

COMMENT ON COLUMN RESERVATION.RES_PERSON IS '예약인원'
/

ALTER TABLE RESERVATION
    ADD CONSTRAINT FK_RESERVATION_MEMBER_NO_MEMBE FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO)
/

ALTER TABLE RESERVATION
    ADD CONSTRAINT FK_RESERVATION_ROOM_NO_ACCOMMO FOREIGN KEY (ROOM_NO)
        REFERENCES ACCOMMODATION (ROOM_NO)
/

    MEMBER_NO       NUMBER          NOT NULL, 
    MEMBER_ID       VARCHAR2(20)    NOT NULL, 
    MEMBER_PW       VARCHAR2(20)    NOT NULL, 
    MEMBER_NAME     VARCHAR2(20)    NOT NULL, 
    MEMBER_PHONE    CHAR(13)        NOT NULL, 
    MEMBER_ADDR     VARCHAR2(50)    NOT NULL, 
    MEMBER_LEVEL    NUMBER          NOT NULL, 
     PRIMARY KEY (MEMBER_NO)

select * from member;
select * from ACCOMMODATION;
select * from reservation;
desc ACCOMMODATION;
--이거 테이블에 지금 테스트데이터 하나씩 넣어볼래요? 잠시만욤 회원도1명 방도1개있어야 외래키때문에 예약될꺼라서
insert into ACCOMMODATION values (ACCOMMODATION_SEQ.NEXTVAL, 1, 50000, 4);
insert into MEMBER values (MEMBER_SEQ.NEXTVAL, 'user01','1234','유저1','010','서울',1);
commit;

-- 혹시 지금 쉬는시간 다른분들에게 안내 되었나요?? 네 제가 소회의실닫았거든요 아 알겠습니다
desc reservation;
--회원이없어서 당장insert가 안되긴하겠네요 일단 쿼리만보면 res_date는 뭐에요? 예약한 일자입니다 sysdate  디폴트값이에요
--그럼 체크인 체크아웃은? 예약하고 싶은 일자와 체크아웃은 int로 받을때 숫자 예로 7일이면 7 이렇게 받아서..더하기로... 제가 생각해도 어이가 없네요..
--아아 res_date는 예약이라는 행동을 한 날짜를의미한다는거죠?그게 바로이해가안됐어서           만약에 20210827 날 예약을한다라고 가정하면
select to_date(20210827,'yyyymmdd') from dual;--이렇게변환해서넣는거거든요                그럼여기가 이렇게 쿼리로짤때는    그리고 체크아웃은 몇일후로하나요?아님 또 입력받나요? 입력받습니답 그게 또 날짜입력받는다는거죠? 제가 단순하게 생각해서
-- int checkout을 7로 받으면 예약한 날짜에 7일 더하면 될 줄 알았어요..

-- 이거 테스트하려면 회원이랑 방 1개는있어야하는데




































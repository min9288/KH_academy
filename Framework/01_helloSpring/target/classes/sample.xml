<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- 객체 생성 -->
	<!-- 
		SamsungTV samsung = new SamsungTV(); 
	-->
	<bean id="samsung" class="kr.or.tv.model.vo.SamsungTV"></bean>
	
	<!-- 객체 생성하여 데이터 넣기1(setter 사용하는 방식) -->
	<!-- 
		Member m1 = new Member();
		m1.setName("이윤수1");
		m1.setAge(20);
		m1.setAddr("서울");	
	 -->
	 <bean id="m1" class="kr.or.member.model.vo.Member">
	 	<property name="name" value="이윤수1"/>
	 	<property name="age">
	 		<value type="java.lang.Integer">20</value>
	 	</property>
	 	<property name="addr" value="서울"/>
	 </bean>
	 
	 <!-- 객체 생성하여 데이터 넣기2(생성자 사용) -->
	 <!-- 
	 	Member m2 = new Member("이윤수2", 30, "부산");
	 	String name = "이윤수2";
	 	int age = 30;
	 	String addr = "부산";
	 	Member m2 = new Member(addr, age, name);
	  -->
	  <bean id="m2" class="kr.or.member.model.vo.Member">
	  	<constructor-arg value="이윤수2"/>
	  	<constructor-arg>
	  		<value type="java.lang.Integer">30</value>
	  	</constructor-arg>
	  	<constructor-arg value="부산"/>
	  </bean>
	  
	  <!--  객체 생성하여 데이터 넣기3(메소드를 이용한 방식) -->
	  <!-- 
	  	MemberMgr mm = new MemberMgr();
	  	mm.setM(m1);
	   -->
	  <bean id="mm" class="kr.or.member.model.vo.MemberMgr">
	  	<property name="m" ref="m1"/>
	  </bean>
	  
	  <!-- TestData 객체 2개 생성 -->
	  <bean id="data1" class="kr.or.member.model.vo.TestData">
	  	<property name="data">
	  		<value type="java.lang.Integer">100</value>
	  	</property>
	  </bean>
	  <bean id="data2" class="kr.or.member.model.vo.TestData" scope="prototype">
	  	<property name="data">
	  		<value type="java.lang.Integer">100</value>
	  	</property>
	  </bean>
</beans>
